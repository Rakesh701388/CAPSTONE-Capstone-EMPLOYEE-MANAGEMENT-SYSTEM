// <auto-generated />
using System;
using EmployeeManagementSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeManagementSystem.Migrations
{
    [DbContext(typeof(EmployeeManagementDbContext))]
    [Migration("20250318174402_SeedInitialData")]
    partial class SeedInitialData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeeManagementSystem.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TerminationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Street",
                            CreatedAt = new DateTime(2025, 3, 18, 23, 14, 1, 597, DateTimeKind.Local).AddTicks(9097),
                            Department = "HR",
                            Email = "john.doe@example.com",
                            FirstName = "John",
                            IsActive = true,
                            JoinDate = new DateTime(2025, 3, 18, 23, 14, 1, 597, DateTimeKind.Local).AddTicks(8585),
                            LastName = "Doe",
                            Phone = "1234567890",
                            Position = "HR Manager",
                            UpdatedAt = new DateTime(2025, 3, 18, 23, 14, 1, 597, DateTimeKind.Local).AddTicks(9231),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Avenue",
                            CreatedAt = new DateTime(2025, 3, 18, 23, 14, 1, 597, DateTimeKind.Local).AddTicks(9495),
                            Department = "IT",
                            Email = "alice.smith@example.com",
                            FirstName = "Alice",
                            IsActive = true,
                            JoinDate = new DateTime(2025, 3, 18, 23, 14, 1, 597, DateTimeKind.Local).AddTicks(9360),
                            LastName = "Smith",
                            ManagerId = 1,
                            Phone = "0987654321",
                            Position = "IT Manager",
                            UpdatedAt = new DateTime(2025, 3, 18, 23, 14, 1, 597, DateTimeKind.Local).AddTicks(9495),
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Road",
                            CreatedAt = new DateTime(2025, 3, 18, 23, 14, 1, 597, DateTimeKind.Local).AddTicks(9504),
                            Department = "Finance",
                            Email = "bob.brown@example.com",
                            FirstName = "Bob",
                            IsActive = true,
                            JoinDate = new DateTime(2025, 3, 18, 23, 14, 1, 597, DateTimeKind.Local).AddTicks(9502),
                            LastName = "Brown",
                            ManagerId = 2,
                            Phone = "1122334455",
                            Position = "Accountant",
                            UpdatedAt = new DateTime(2025, 3, 18, 23, 14, 1, 597, DateTimeKind.Local).AddTicks(9504),
                            UserId = 3
                        });
                });

            modelBuilder.Entity("EmployeeManagementSystem.Models.LeaveRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ApprovedById")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LeaveType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("EmployeeId");

                    b.ToTable("LeaveRequests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApprovedById = 2,
                            CreatedAt = new DateTime(2025, 3, 18, 23, 14, 1, 598, DateTimeKind.Local).AddTicks(4653),
                            EmployeeId = 3,
                            EndDate = new DateTime(2025, 3, 23, 23, 14, 1, 598, DateTimeKind.Local).AddTicks(3565),
                            LeaveType = "Vacation",
                            Reason = "Family Trip",
                            StartDate = new DateTime(2025, 3, 20, 23, 14, 1, 598, DateTimeKind.Local).AddTicks(395),
                            Status = "Pending",
                            UpdatedAt = new DateTime(2025, 3, 18, 23, 14, 1, 598, DateTimeKind.Local).AddTicks(4796)
                        });
                });

            modelBuilder.Entity("EmployeeManagementSystem.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 3, 18, 23, 14, 1, 596, DateTimeKind.Local).AddTicks(9987),
                            PasswordHash = "hashedpassword1",
                            Role = "HR",
                            UpdatedAt = new DateTime(2025, 3, 18, 23, 14, 1, 597, DateTimeKind.Local).AddTicks(221),
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 3, 18, 23, 14, 1, 597, DateTimeKind.Local).AddTicks(374),
                            PasswordHash = "hashedpassword2",
                            Role = "Manager",
                            UpdatedAt = new DateTime(2025, 3, 18, 23, 14, 1, 597, DateTimeKind.Local).AddTicks(375),
                            Username = "manager1"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 3, 18, 23, 14, 1, 597, DateTimeKind.Local).AddTicks(378),
                            PasswordHash = "hashedpassword3",
                            Role = "Employee",
                            UpdatedAt = new DateTime(2025, 3, 18, 23, 14, 1, 597, DateTimeKind.Local).AddTicks(379),
                            Username = "employee1"
                        });
                });

            modelBuilder.Entity("EmployeeManagementSystem.Models.Employee", b =>
                {
                    b.HasOne("EmployeeManagementSystem.Models.Employee", "Manager")
                        .WithMany("ManagedEmployees")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EmployeeManagementSystem.Models.User", "User")
                        .WithOne("Employee")
                        .HasForeignKey("EmployeeManagementSystem.Models.Employee", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manager");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EmployeeManagementSystem.Models.LeaveRequest", b =>
                {
                    b.HasOne("EmployeeManagementSystem.Models.Employee", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EmployeeManagementSystem.Models.Employee", "Employee")
                        .WithMany("LeaveRequests")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApprovedBy");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EmployeeManagementSystem.Models.Employee", b =>
                {
                    b.Navigation("LeaveRequests");

                    b.Navigation("ManagedEmployees");
                });

            modelBuilder.Entity("EmployeeManagementSystem.Models.User", b =>
                {
                    b.Navigation("Employee")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
